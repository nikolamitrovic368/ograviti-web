/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Modules = Array<
  | ({
      _key: string
    } & HeadingTitle)
  | ({
      _key: string
    } & Branding)
  | {
      title: string
      subtitle: string
      step1?: {
        name: string
        title: string
        subtitle: string
        media?: {
          image?: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
          position?: 'top' | 'bottom' | 'left'
        }
      }
      step2?: {
        name: string
        title: string
        subtitle: string
        media?: {
          image?: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
          position?: 'top' | 'bottom' | 'left'
        }
      }
      step3?: {
        name: string
        title: string
        subtitle: string
        media?: {
          image?: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
          position?: 'top' | 'bottom' | 'left'
        }
      }
      step4?: {
        name: string
        title: string
        subtitle: string
        media?: {
          image?: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
          position?: 'top' | 'bottom' | 'left'
        }
      }
      _type: 'journey-carousel'
      _key: string
    }
  | ({
      _key: string
    } & CaseStudyList)
  | ({
      _key: string
    } & TestimonialList)
  | ({
      _key: string
    } & Team)
  | {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      _key: string
      [internalGroqTypeReferenceTo]?: 'companies'
    }
  | ({
      _key: string
    } & Gallery)
  | ({
      _key: string
    } & TextWithLogo)
  | ({
      _key: string
    } & SimpleText)
  | ({
      _key: string
    } & Video)
  | {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      _key: string
      [internalGroqTypeReferenceTo]?: 'contact-form'
    }
  | {
      title: string
      ctaText: string
      _type: 'contact-us-cta'
      _key: string
    }
  | ({
      _key: string
    } & ImageWithList)
>

export type ImageWithList = {
  _type: 'image-with-list'
  title: string
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  items?: Array<{
    title: string
    subtitle: string
    _type: 'item'
    _key: string
  }>
}

export type Team = {
  _type: 'team'
  title: string
  subtitle: string
  members?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'teamMember'
  }>
}

export type ContactUsCta = {
  _id: string
  _type: 'contact-us-cta'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  ctaText: string
}

export type HeadingTitle = {
  _type: 'heading-title'
  title?: string
  subtitle: string
}

export type ContactForm = {
  _id: string
  _type: 'contact-form'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: Array<
    {
      _key: string
    } & InternationalizedArrayStringValue
  >
  offices?: Array<{
    name: Array<
      {
        _key: string
      } & InternationalizedArrayStringValue
    >
    address: Array<
      {
        _key: string
      } & InternationalizedArrayStringValue
    >
    phone: string
    _type: 'office'
    _key: string
  }>
}

export type Video = {
  _type: 'video'
  type: 'youtube' | 'link' | 'file'
  url?: string
  file?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
    }
    _type: 'file'
  }
}

export type SimpleText = {
  _type: 'simple-text'
  title: string
  subtitle: string
}

export type TextWithLogo = {
  _type: 'text-with-logo'
  title: string
  subtitle: string
  logoPosition?: boolean
}

export type Gallery = {
  _type: 'gallery'
  images?: Array<{
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
    _key: string
  }>
}

export type TestimonialList = {
  _type: 'testimonial-list'
  title?: string
  subtitle?: string
  testimonialCards?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'testimonialCard'
  }>
}

export type JourneyCarousel = {
  _id: string
  _type: 'journey-carousel'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  step1?: {
    name: string
    title: string
    subtitle: string
    media?: {
      image?: {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
      }
      position?: 'top' | 'bottom' | 'left'
    }
  }
  step2?: {
    name: string
    title: string
    subtitle: string
    media?: {
      image?: {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
      }
      position?: 'top' | 'bottom' | 'left'
    }
  }
  step3?: {
    name: string
    title: string
    subtitle: string
    media?: {
      image?: {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
      }
      position?: 'top' | 'bottom' | 'left'
    }
  }
  step4?: {
    name: string
    title: string
    subtitle: string
    media?: {
      image?: {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
      }
      position?: 'top' | 'bottom' | 'left'
    }
  }
}

export type CaseStudyList = {
  _type: 'case-study-list'
  title: string
  subtitle: string
  listTitle?: string
  caseStudies?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'caseStudy'
  }>
}

export type Branding = {
  _type: 'branding'
  brandingSubtitle: string
  dataAnalysisSubtitle: string
  uiuxSubtitle: string
  developmentSubtitle: string
  digitalMarketingSubtitle: string
}

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>
        text?: string
        _type: 'span'
        _key: string
      }>
      style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'blockquote'
      listItem?: 'bullet'
      markDefs?: Array<{
        href?: string
        _type: 'link'
        _key: string
      }>
      level?: number
      _type: 'block'
      _key: string
    }
  | {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
      _key: string
    }
>

export type Footer = {
  _id: string
  _type: 'footer'
  _createdAt: string
  _updatedAt: string
  _rev: string
  socialMedia?: Array<{
    link: string
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    _type: 'social'
    _key: string
  }>
}

export type Companies = {
  _id: string
  _type: 'companies'
  _createdAt: string
  _updatedAt: string
  _rev: string
  companyImages?: Array<{
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
    _key: string
  }>
}

export type TeamMember = {
  _id: string
  _type: 'teamMember'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name: Array<
    {
      _key: string
    } & InternationalizedArrayStringValue
  >
  role: Array<
    {
      _key: string
    } & InternationalizedArrayStringValue
  >
  linkedin?: string
  facebook?: string
  instagram?: string
  youtube?: string
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type InternationalizedArrayTextValue = {
  _type: 'internationalizedArrayTextValue'
  value?: string
}

export type InternationalizedArrayStringValue = {
  _type: 'internationalizedArrayStringValue'
  value?: string
}

export type InternationalizedArrayText = Array<
  {
    _key: string
  } & InternationalizedArrayTextValue
>

export type InternationalizedArrayString = Array<
  {
    _key: string
  } & InternationalizedArrayStringValue
>

export type TranslationMetadata = {
  _id: string
  _type: 'translation.metadata'
  _createdAt: string
  _updatedAt: string
  _rev: string
  translations?: Array<
    {
      _key: string
    } & InternationalizedArrayReferenceValue
  >
  schemaTypes?: Array<string>
}

export type InternationalizedArrayReferenceValue = {
  _type: 'internationalizedArrayReferenceValue'
  value?:
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'page'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'blog'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'career'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'caseStudy'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'testimonialCard'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'globalSeo'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'testimonialPage'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'blogPage'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'caseStudyPage'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'careersPage'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'servicesPage'
      }
}

export type ServicesPage = {
  _id: string
  _type: 'servicesPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  service1?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  service2?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  service3?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  service4?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  service5?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  modules?: Modules
  seo?: Seo
  language?: string
}

export type CareersPage = {
  _id: string
  _type: 'careersPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  careers?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'career'
  }>
  seo?: Seo
  language?: string
}

export type CaseStudyPage = {
  _id: string
  _type: 'caseStudyPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  caseStudies?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'caseStudy'
  }>
  seo?: Seo
  language?: string
}

export type BlogPage = {
  _id: string
  _type: 'blogPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  blogs?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'blog'
  }>
  seo?: Seo
  language?: string
}

export type TestimonialPage = {
  _id: string
  _type: 'testimonialPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  testimonialCards?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'testimonialCard'
  }>
  seo?: Seo
  language?: string
}

export type GlobalSeo = {
  _id: string
  _type: 'globalSeo'
  _createdAt: string
  _updatedAt: string
  _rev: string
  globalSeoTitle: string
  globalSeoDescription: string
  globalKeywords?: Array<string>
  globalSeoImage: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  language?: string
}

export type TestimonialCard = {
  _id: string
  _type: 'testimonialCard'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name: string
  role: string
  rate: 0 | 1 | 2 | 3 | 4 | 5
  description: string
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  language?: string
}

export type CaseStudy = {
  _id: string
  _type: 'caseStudy'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  description: string
  CompletedDate: string
  client: string
  website: string
  mainService: string
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  modules?: Modules
  relatedCaseStudies?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'caseStudy'
  }>
  slug: Slug
  seo?: Seo
  language?: string
}

export type Career = {
  _id: string
  _type: 'career'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  body: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
  >
  slug: Slug
  seo?: Seo
  language?: string
}

export type Blog = {
  _id: string
  _type: 'blog'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  displayHeroImage?: boolean
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'normal'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | {
        multiPartImage?: MultiPartImage
        _type: 'multiPartImageBlock'
        _key: string
      }
    | ({
        _key: string
      } & Video)
  >
  relatedBlogs?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'blog'
  }>
  slug: Slug
  seo?: Seo
  language?: string
}

export type MultiPartImage = {
  _type: 'multiPartImage'
  images?: Array<{
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
    _key: string
  }>
}

export type Page = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  slug: Slug
  modules?: Modules
  seo?: Seo
  language?: string
}

export type Seo = {
  _type: 'seo'
  title?: string
  description?: string
  keywords?: Array<string>
  robotsNoIndex: boolean
  robotsNoFollow: boolean
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Slug = {
  _type: 'slug'
  current: string
  source?: string
}

export type InternationalizedArrayReference = Array<
  {
    _key: string
  } & InternationalizedArrayReferenceValue
>

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | Geopoint
  | Modules
  | ImageWithList
  | Team
  | ContactUsCta
  | HeadingTitle
  | ContactForm
  | Video
  | SimpleText
  | TextWithLogo
  | Gallery
  | TestimonialList
  | JourneyCarousel
  | CaseStudyList
  | Branding
  | BlockContent
  | Footer
  | Companies
  | TeamMember
  | InternationalizedArrayTextValue
  | InternationalizedArrayStringValue
  | InternationalizedArrayText
  | InternationalizedArrayString
  | TranslationMetadata
  | InternationalizedArrayReferenceValue
  | ServicesPage
  | CareersPage
  | CaseStudyPage
  | BlogPage
  | TestimonialPage
  | GlobalSeo
  | TestimonialCard
  | CaseStudy
  | Career
  | Blog
  | MultiPartImage
  | Page
  | Seo
  | SanityFileAsset
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug
  | InternationalizedArrayReference
export declare const internalGroqTypeReferenceTo: unique symbol
// Source: ./sanity/queries.ts
// Variable: footerQuery
// Query: *[_type == 'footer'][0]
export type FooterQueryResult = {
  _id: string
  _type: 'footer'
  _createdAt: string
  _updatedAt: string
  _rev: string
  socialMedia?: Array<{
    link: string
    image?: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    _type: 'social'
    _key: string
  }>
} | null
// Variable: homeQuery
// Query: *[_type == "page" && slug.current == 'index' && language == $locale][0] {  ...,  modules[]{   ...,  _type == 'blog-list' => { filteredCategory-> },  _type == 'case-study-list' => { caseStudies[]->    {      _id,      title,      description,      slug,      image    }  },  _type == 'team' => {    ...,    members[]-> {      ...,      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),      "role":  coalesce(role[_key == $locale][0].value, "Missing translation")    }  },  _type == "companies" => @->,  _type == "testimonial-list" => { testimonialCards[]-> },  _type == "video" => {    ...,    type == "file" => {      "url": file.asset->url    }  },  _type == "contact-form" => @->{    ...,    "title":  coalesce(title[_key == $locale][0].value, "Missing translation"),    "offices": offices[]{      ...,      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),      "address":  coalesce(address[_key == $locale][0].value, "Missing translation"),    }  },}}
export type HomeQueryResult = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  slug: Slug
  modules: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
      }
    | {
        _key: string
        _type: 'branding'
        brandingSubtitle: string
        dataAnalysisSubtitle: string
        uiuxSubtitle: string
        developmentSubtitle: string
        digitalMarketingSubtitle: string
      }
    | {
        _key: string
        _type: 'case-study-list'
        title: string
        subtitle: string
        listTitle?: string
        caseStudies: Array<{
          _id: string
          title: string
          description: string
          slug: Slug
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
        }> | null
      }
    | {
        title: string
        ctaText: string
        _type: 'contact-us-cta'
        _key: string
      }
    | {
        _key: string
        _type: 'gallery'
        images?: Array<{
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          alt?: string
          _type: 'image'
          _key: string
        }>
      }
    | {
        _key: string
        _type: 'heading-title'
        title?: string
        subtitle: string
      }
    | {
        _key: string
        _type: 'image-with-list'
        title: string
        image: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
        }
        items?: Array<{
          title: string
          subtitle: string
          _type: 'item'
          _key: string
        }>
      }
    | {
        title: string
        subtitle: string
        step1?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step2?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step3?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step4?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        _type: 'journey-carousel'
        _key: string
      }
    | {
        _key: string
        _type: 'simple-text'
        title: string
        subtitle: string
      }
    | {
        _key: string
        _type: 'team'
        title: string
        subtitle: string
        members: Array<{
          _id: string
          _type: 'teamMember'
          _createdAt: string
          _updatedAt: string
          _rev: string
          name: string | 'Missing translation'
          role: string | 'Missing translation'
          linkedin?: string
          facebook?: string
          instagram?: string
          youtube?: string
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
        }> | null
      }
    | {
        _key: string
        _type: 'testimonial-list'
        title?: string
        subtitle?: string
        testimonialCards: Array<{
          _id: string
          _type: 'testimonialCard'
          _createdAt: string
          _updatedAt: string
          _rev: string
          name: string
          role: string
          rate: 0 | 1 | 2 | 3 | 4 | 5
          description: string
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
          language?: string
        }> | null
      }
    | {
        _key: string
        _type: 'text-with-logo'
        title: string
        subtitle: string
        logoPosition?: boolean
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url?: string
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url: string | null
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
  > | null
  seo?: Seo
  language?: string
} | null
// Variable: pageQuery
// Query: *[_type == "page" && slug.current == $slug && language == $locale][0] {  ...,  modules[]{   ...,  _type == 'blog-list' => { filteredCategory-> },  _type == 'case-study-list' => { caseStudies[]->    {      _id,      title,      description,      slug,      image    }  },  _type == 'team' => {    ...,    members[]-> {      ...,      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),      "role":  coalesce(role[_key == $locale][0].value, "Missing translation")    }  },  _type == "companies" => @->,  _type == "testimonial-list" => { testimonialCards[]-> },  _type == "video" => {    ...,    type == "file" => {      "url": file.asset->url    }  },  _type == "contact-form" => @->{    ...,    "title":  coalesce(title[_key == $locale][0].value, "Missing translation"),    "offices": offices[]{      ...,      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),      "address":  coalesce(address[_key == $locale][0].value, "Missing translation"),    }  },}}
export type PageQueryResult = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  slug: Slug
  modules: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
      }
    | {
        _key: string
        _type: 'branding'
        brandingSubtitle: string
        dataAnalysisSubtitle: string
        uiuxSubtitle: string
        developmentSubtitle: string
        digitalMarketingSubtitle: string
      }
    | {
        _key: string
        _type: 'case-study-list'
        title: string
        subtitle: string
        listTitle?: string
        caseStudies: Array<{
          _id: string
          title: string
          description: string
          slug: Slug
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
        }> | null
      }
    | {
        title: string
        ctaText: string
        _type: 'contact-us-cta'
        _key: string
      }
    | {
        _key: string
        _type: 'gallery'
        images?: Array<{
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          alt?: string
          _type: 'image'
          _key: string
        }>
      }
    | {
        _key: string
        _type: 'heading-title'
        title?: string
        subtitle: string
      }
    | {
        _key: string
        _type: 'image-with-list'
        title: string
        image: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
        }
        items?: Array<{
          title: string
          subtitle: string
          _type: 'item'
          _key: string
        }>
      }
    | {
        title: string
        subtitle: string
        step1?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step2?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step3?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step4?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        _type: 'journey-carousel'
        _key: string
      }
    | {
        _key: string
        _type: 'simple-text'
        title: string
        subtitle: string
      }
    | {
        _key: string
        _type: 'team'
        title: string
        subtitle: string
        members: Array<{
          _id: string
          _type: 'teamMember'
          _createdAt: string
          _updatedAt: string
          _rev: string
          name: string | 'Missing translation'
          role: string | 'Missing translation'
          linkedin?: string
          facebook?: string
          instagram?: string
          youtube?: string
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
        }> | null
      }
    | {
        _key: string
        _type: 'testimonial-list'
        title?: string
        subtitle?: string
        testimonialCards: Array<{
          _id: string
          _type: 'testimonialCard'
          _createdAt: string
          _updatedAt: string
          _rev: string
          name: string
          role: string
          rate: 0 | 1 | 2 | 3 | 4 | 5
          description: string
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
          language?: string
        }> | null
      }
    | {
        _key: string
        _type: 'text-with-logo'
        title: string
        subtitle: string
        logoPosition?: boolean
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url?: string
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url: string | null
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
  > | null
  seo?: Seo
  language?: string
} | null
// Variable: globalSeoQuery
// Query: *[_type == "globalSeo" && language == $locale][0]
export type GlobalSeoQueryResult = {
  _id: string
  _type: 'globalSeo'
  _createdAt: string
  _updatedAt: string
  _rev: string
  globalSeoTitle: string
  globalSeoDescription: string
  globalKeywords?: Array<string>
  globalSeoImage: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  language?: string
} | null
// Variable: careerQuery
// Query: *[_type == "career" && slug.current == $slug && language == $locale][0]
export type CareerQueryResult = {
  _id: string
  _type: 'career'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  body: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
  >
  slug: Slug
  seo?: Seo
  language?: string
} | null
// Variable: blogPageQuery
// Query: *[_type == "blogPage" && language == $locale][0] {  ...,  blogs[]-> {    _id,    title,    subtitle,    slug,    image  },}
export type BlogPageQueryResult = {
  _id: string
  _type: 'blogPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  blogs: Array<{
    _id: string
    title: string
    subtitle: string
    slug: Slug
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }> | null
  seo?: Seo
  language?: string
} | null
// Variable: blogQuery
// Query: *[_type == "blog" && slug.current == $slug && language == $locale][0] {  ...,  relatedBlogs[]-> {    _id,    title,    subtitle,    image,    slug,    image  },  body[] {    ...,  _type == "video" => {    ...,    type == "file" => {      "url": file.asset->url    }  }}}
export type BlogQueryResult = {
  _id: string
  _type: 'blog'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  displayHeroImage?: boolean
  body: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?:
          | 'blockquote'
          | 'h1'
          | 'h2'
          | 'h3'
          | 'h4'
          | 'h5'
          | 'h6'
          | 'normal'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        _type: 'image'
        _key: string
      }
    | {
        multiPartImage?: MultiPartImage
        _type: 'multiPartImageBlock'
        _key: string
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url?: string
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url: string | null
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
  > | null
  relatedBlogs: Array<{
    _id: string
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
    slug: Slug
  }> | null
  slug: Slug
  seo?: Seo
  language?: string
} | null
// Variable: contactUsPageQuery
// Query: *[_type == "contactUsPage" && language == $locale][0]
export type ContactUsPageQueryResult = null
// Variable: careersPageQuery
// Query: *[_type == "careersPage" && language == $locale][0] {  ...,  careers[]-> {  _id, title, subtitle, slug}}
export type CareersPageQueryResult = {
  _id: string
  _type: 'careersPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  careers: Array<{
    _id: string
    title: string
    subtitle: string
    slug: Slug
  }> | null
  seo?: Seo
  language?: string
} | null
// Variable: caseStudyPageQuery
// Query: *[_type == "caseStudyPage" && language == $locale][0] {  ...,  caseStudies[]-> {    _id,    title,    description,    slug,    image  },}
export type CaseStudyPageQueryResult = {
  _id: string
  _type: 'caseStudyPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  caseStudies: Array<{
    _id: string
    title: string
    description: string
    slug: Slug
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }> | null
  seo?: Seo
  language?: string
} | null
// Variable: caseStudyQuery
// Query: *[_type == "caseStudy" && slug.current == $slug && language == $locale][0] {  ...,  modules[]{   ...,  _type == 'blog-list' => { filteredCategory-> },  _type == 'case-study-list' => { caseStudies[]->    {      _id,      title,      description,      slug,      image    }  },  _type == 'team' => {    ...,    members[]-> {      ...,      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),      "role":  coalesce(role[_key == $locale][0].value, "Missing translation")    }  },  _type == "companies" => @->,  _type == "testimonial-list" => { testimonialCards[]-> },  _type == "video" => {    ...,    type == "file" => {      "url": file.asset->url    }  },  _type == "contact-form" => @->{    ...,    "title":  coalesce(title[_key == $locale][0].value, "Missing translation"),    "offices": offices[]{      ...,      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),      "address":  coalesce(address[_key == $locale][0].value, "Missing translation"),    }  },},  relatedCaseStudies[]-> {    _id,    title,    description,    slug,    image  }}
export type CaseStudyQueryResult = {
  _id: string
  _type: 'caseStudy'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  description: string
  CompletedDate: string
  client: string
  website: string
  mainService: string
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  modules: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
      }
    | {
        _key: string
        _type: 'branding'
        brandingSubtitle: string
        dataAnalysisSubtitle: string
        uiuxSubtitle: string
        developmentSubtitle: string
        digitalMarketingSubtitle: string
      }
    | {
        _key: string
        _type: 'case-study-list'
        title: string
        subtitle: string
        listTitle?: string
        caseStudies: Array<{
          _id: string
          title: string
          description: string
          slug: Slug
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
        }> | null
      }
    | {
        title: string
        ctaText: string
        _type: 'contact-us-cta'
        _key: string
      }
    | {
        _key: string
        _type: 'gallery'
        images?: Array<{
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          alt?: string
          _type: 'image'
          _key: string
        }>
      }
    | {
        _key: string
        _type: 'heading-title'
        title?: string
        subtitle: string
      }
    | {
        _key: string
        _type: 'image-with-list'
        title: string
        image: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
        }
        items?: Array<{
          title: string
          subtitle: string
          _type: 'item'
          _key: string
        }>
      }
    | {
        title: string
        subtitle: string
        step1?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step2?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step3?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step4?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        _type: 'journey-carousel'
        _key: string
      }
    | {
        _key: string
        _type: 'simple-text'
        title: string
        subtitle: string
      }
    | {
        _key: string
        _type: 'team'
        title: string
        subtitle: string
        members: Array<{
          _id: string
          _type: 'teamMember'
          _createdAt: string
          _updatedAt: string
          _rev: string
          name: string | 'Missing translation'
          role: string | 'Missing translation'
          linkedin?: string
          facebook?: string
          instagram?: string
          youtube?: string
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
        }> | null
      }
    | {
        _key: string
        _type: 'testimonial-list'
        title?: string
        subtitle?: string
        testimonialCards: Array<{
          _id: string
          _type: 'testimonialCard'
          _createdAt: string
          _updatedAt: string
          _rev: string
          name: string
          role: string
          rate: 0 | 1 | 2 | 3 | 4 | 5
          description: string
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
          language?: string
        }> | null
      }
    | {
        _key: string
        _type: 'text-with-logo'
        title: string
        subtitle: string
        logoPosition?: boolean
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url?: string
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url: string | null
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
  > | null
  relatedCaseStudies: Array<{
    _id: string
    title: string
    description: string
    slug: Slug
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }> | null
  slug: Slug
  seo?: Seo
  language?: string
} | null
// Variable: servicesPageQuery
// Query: *[_type == "servicesPage" && language == $locale][0] {  ...,  modules[]{   ...,  _type == 'blog-list' => { filteredCategory-> },  _type == 'case-study-list' => { caseStudies[]->    {      _id,      title,      description,      slug,      image    }  },  _type == 'team' => {    ...,    members[]-> {      ...,      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),      "role":  coalesce(role[_key == $locale][0].value, "Missing translation")    }  },  _type == "companies" => @->,  _type == "testimonial-list" => { testimonialCards[]-> },  _type == "video" => {    ...,    type == "file" => {      "url": file.asset->url    }  },  _type == "contact-form" => @->{    ...,    "title":  coalesce(title[_key == $locale][0].value, "Missing translation"),    "offices": offices[]{      ...,      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),      "address":  coalesce(address[_key == $locale][0].value, "Missing translation"),    }  },},}
export type ServicesPageQueryResult = {
  _id: string
  _type: 'servicesPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title: string
  subtitle: string
  service1?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  service2?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  service3?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  service4?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  service5?: {
    title: string
    subtitle: string
    image: {
      asset?: {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
      }
      hotspot?: SanityImageHotspot
      crop?: SanityImageCrop
      _type: 'image'
    }
  }
  modules: Array<
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        _key: string
      }
    | {
        _key: string
        _type: 'branding'
        brandingSubtitle: string
        dataAnalysisSubtitle: string
        uiuxSubtitle: string
        developmentSubtitle: string
        digitalMarketingSubtitle: string
      }
    | {
        _key: string
        _type: 'case-study-list'
        title: string
        subtitle: string
        listTitle?: string
        caseStudies: Array<{
          _id: string
          title: string
          description: string
          slug: Slug
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
        }> | null
      }
    | {
        title: string
        ctaText: string
        _type: 'contact-us-cta'
        _key: string
      }
    | {
        _key: string
        _type: 'gallery'
        images?: Array<{
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          alt?: string
          _type: 'image'
          _key: string
        }>
      }
    | {
        _key: string
        _type: 'heading-title'
        title?: string
        subtitle: string
      }
    | {
        _key: string
        _type: 'image-with-list'
        title: string
        image: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
          }
          hotspot?: SanityImageHotspot
          crop?: SanityImageCrop
          _type: 'image'
        }
        items?: Array<{
          title: string
          subtitle: string
          _type: 'item'
          _key: string
        }>
      }
    | {
        title: string
        subtitle: string
        step1?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step2?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step3?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        step4?: {
          name: string
          title: string
          subtitle: string
          media?: {
            image?: {
              asset?: {
                _ref: string
                _type: 'reference'
                _weak?: boolean
                [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
              }
              hotspot?: SanityImageHotspot
              crop?: SanityImageCrop
              _type: 'image'
            }
            position?: 'bottom' | 'left' | 'top'
          }
        }
        _type: 'journey-carousel'
        _key: string
      }
    | {
        _key: string
        _type: 'simple-text'
        title: string
        subtitle: string
      }
    | {
        _key: string
        _type: 'team'
        title: string
        subtitle: string
        members: Array<{
          _id: string
          _type: 'teamMember'
          _createdAt: string
          _updatedAt: string
          _rev: string
          name: string | 'Missing translation'
          role: string | 'Missing translation'
          linkedin?: string
          facebook?: string
          instagram?: string
          youtube?: string
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
        }> | null
      }
    | {
        _key: string
        _type: 'testimonial-list'
        title?: string
        subtitle?: string
        testimonialCards: Array<{
          _id: string
          _type: 'testimonialCard'
          _createdAt: string
          _updatedAt: string
          _rev: string
          name: string
          role: string
          rate: 0 | 1 | 2 | 3 | 4 | 5
          description: string
          image: {
            asset?: {
              _ref: string
              _type: 'reference'
              _weak?: boolean
              [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
            }
            hotspot?: SanityImageHotspot
            crop?: SanityImageCrop
            _type: 'image'
          }
          language?: string
        }> | null
      }
    | {
        _key: string
        _type: 'text-with-logo'
        title: string
        subtitle: string
        logoPosition?: boolean
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url?: string
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
    | {
        _key: string
        _type: 'video'
        type: 'file' | 'link' | 'youtube'
        url: string | null
        file?: {
          asset?: {
            _ref: string
            _type: 'reference'
            _weak?: boolean
            [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
          }
          _type: 'file'
        }
      }
  > | null
  seo?: Seo
  language?: string
} | null

// Query TypeMap
import '@sanity/client'
declare module '@sanity/client' {
  interface SanityQueries {
    "\n*[_type == 'footer'][0]": FooterQueryResult
    '\n*[_type == "page" && slug.current == \'index\' && language == $locale][0] {\n  ...,\n  \nmodules[]{ \n  ...,\n  _type == \'blog-list\' => { filteredCategory-> },\n  _type == \'case-study-list\' => { caseStudies[]->\n    {\n      _id,\n      title,\n      description,\n      slug,\n      image\n    }\n  },\n  _type == \'team\' => {\n    ...,\n    members[]-> {\n      ...,\n      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),\n      "role":  coalesce(role[_key == $locale][0].value, "Missing translation")\n    }\n  },\n  _type == "companies" => @->,\n  _type == "testimonial-list" => { testimonialCards[]-> },\n  _type == "video" => {\n    ...,\n    type == "file" => {\n      "url": file.asset->url\n    }\n  },\n  _type == "contact-form" => @->{\n    ...,\n    "title":  coalesce(title[_key == $locale][0].value, "Missing translation"),\n    "offices": offices[]{\n      ...,\n      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),\n      "address":  coalesce(address[_key == $locale][0].value, "Missing translation"),\n    }\n  },\n}\n\n}': HomeQueryResult
    '\n*[_type == "page" && slug.current == $slug && language == $locale][0] {\n  ...,\n  \nmodules[]{ \n  ...,\n  _type == \'blog-list\' => { filteredCategory-> },\n  _type == \'case-study-list\' => { caseStudies[]->\n    {\n      _id,\n      title,\n      description,\n      slug,\n      image\n    }\n  },\n  _type == \'team\' => {\n    ...,\n    members[]-> {\n      ...,\n      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),\n      "role":  coalesce(role[_key == $locale][0].value, "Missing translation")\n    }\n  },\n  _type == "companies" => @->,\n  _type == "testimonial-list" => { testimonialCards[]-> },\n  _type == "video" => {\n    ...,\n    type == "file" => {\n      "url": file.asset->url\n    }\n  },\n  _type == "contact-form" => @->{\n    ...,\n    "title":  coalesce(title[_key == $locale][0].value, "Missing translation"),\n    "offices": offices[]{\n      ...,\n      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),\n      "address":  coalesce(address[_key == $locale][0].value, "Missing translation"),\n    }\n  },\n}\n\n}': PageQueryResult
    '\n*[_type == "globalSeo" && language == $locale][0]\n': GlobalSeoQueryResult
    '\n*[_type == "career" && slug.current == $slug && language == $locale][0]\n': CareerQueryResult
    '\n*[_type == "blogPage" && language == $locale][0] {\n  ...,\n  blogs[]-> {\n    _id,\n    title,\n    subtitle,\n    slug,\n    image\n  },\n}\n': BlogPageQueryResult
    '\n*[_type == "blog" && slug.current == $slug && language == $locale][0] {\n  ...,\n  relatedBlogs[]-> {\n    _id,\n    title,\n    subtitle,\n    image,\n    slug,\n    image\n  },\n  \nbody[] {\n    ...,\n  _type == "video" => {\n    ...,\n    type == "file" => {\n      "url": file.asset->url\n    }\n  }\n}\n\n}\n': BlogQueryResult
    '\n*[_type == "contactUsPage" && language == $locale][0]\n': ContactUsPageQueryResult
    '\n*[_type == "careersPage" && language == $locale][0] {\n  ...,\n  careers[]-> \n{\n  _id, title, subtitle, slug\n}\n\n}\n': CareersPageQueryResult
    '\n*[_type == "caseStudyPage" && language == $locale][0] {\n  ...,\n  caseStudies[]-> {\n    _id,\n    title,\n    description,\n    slug,\n    image\n  },\n}\n': CaseStudyPageQueryResult
    '\n*[_type == "caseStudy" && slug.current == $slug && language == $locale][0] {\n  ...,\n  \nmodules[]{ \n  ...,\n  _type == \'blog-list\' => { filteredCategory-> },\n  _type == \'case-study-list\' => { caseStudies[]->\n    {\n      _id,\n      title,\n      description,\n      slug,\n      image\n    }\n  },\n  _type == \'team\' => {\n    ...,\n    members[]-> {\n      ...,\n      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),\n      "role":  coalesce(role[_key == $locale][0].value, "Missing translation")\n    }\n  },\n  _type == "companies" => @->,\n  _type == "testimonial-list" => { testimonialCards[]-> },\n  _type == "video" => {\n    ...,\n    type == "file" => {\n      "url": file.asset->url\n    }\n  },\n  _type == "contact-form" => @->{\n    ...,\n    "title":  coalesce(title[_key == $locale][0].value, "Missing translation"),\n    "offices": offices[]{\n      ...,\n      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),\n      "address":  coalesce(address[_key == $locale][0].value, "Missing translation"),\n    }\n  },\n}\n,\n  relatedCaseStudies[]-> {\n    _id,\n    title,\n    description,\n    slug,\n    image\n  }\n}\n': CaseStudyQueryResult
    '\n*[_type == "servicesPage" && language == $locale][0] {\n  ...,\n  \nmodules[]{ \n  ...,\n  _type == \'blog-list\' => { filteredCategory-> },\n  _type == \'case-study-list\' => { caseStudies[]->\n    {\n      _id,\n      title,\n      description,\n      slug,\n      image\n    }\n  },\n  _type == \'team\' => {\n    ...,\n    members[]-> {\n      ...,\n      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),\n      "role":  coalesce(role[_key == $locale][0].value, "Missing translation")\n    }\n  },\n  _type == "companies" => @->,\n  _type == "testimonial-list" => { testimonialCards[]-> },\n  _type == "video" => {\n    ...,\n    type == "file" => {\n      "url": file.asset->url\n    }\n  },\n  _type == "contact-form" => @->{\n    ...,\n    "title":  coalesce(title[_key == $locale][0].value, "Missing translation"),\n    "offices": offices[]{\n      ...,\n      "name":  coalesce(name[_key == $locale][0].value, "Missing translation"),\n      "address":  coalesce(address[_key == $locale][0].value, "Missing translation"),\n    }\n  },\n}\n,\n}\n': ServicesPageQueryResult
  }
}
